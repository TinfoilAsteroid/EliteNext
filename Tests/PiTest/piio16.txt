#program piio16   1 trace = 0   5 REG 147,1+2+4: REG 155,0 : REM data ready 0, cts 0, ack 0   7 PROC reset()  10 PRINT "starting pi test"  20 result$ = ""  30 PRINT "Hello>": PROC hello() : PAUSE 0  31 REM PRINT "Ping>": PROC pingtest () : PAUSE 0  40 PRINT "AddS>": PROC addship () : PAUSE 0  50 PRINT "View>": PROC setview () : PAUSE 0  99 STOP  300 DEFPROC pingtest() 305 PROC sendcommand(2) 306 PROC readbyte() TO result: PRINT "ping code ";result 307 ENDPROC  310 DEFPROC addship() 311 PROC sendcommand(48) 312 PROC sendbyte(2) 313 PRINT "X=20,32 Y=100,4 Z=49,127 " 317 PRINT "Pos": PROC sendbyte(32): PROC sendbyte(20+128) 318 PROC sendword((100*256)+4) : PROC sendword ((49 *256)+127) 320 PRINT "Mat";: PROC sendword ((25*256)+7) : PROC sendword((2*256)+8): PROC sendword((49*256)+128) 340 PROC sendword ((25*256)+14) : PROC sendword((2*256)+27): PROC sendword((58*256)+66) 350 PROC sendword ((6*256)+64) : PROC sendword((51*256)+13): PROC sendword((104*256)+7) 355 PROC sendbyte(1): PROC sendbyte(2): PROC sendbyte(3): PROC sendbyte(10): PROC sendbyte(3): PROC sendbyte (32+64) 360 ENDPROC  400 DEFPROC setview() 410 PROC sendcommand(18) 420 PROC sendbyte(1) 430 ENDPROC  900 DEFPROC reset() 910 REG 144, 16+32+64+128 : REM pins 4 to 7 write enable 920 REG 145, 1+2+4+8 : REM pins 0 to 3 write enable 930 REG 147,1+2+4  : REM data ready pin write enable 940 REG 155,0 : REM clear status bits 950 REG 152,0: REG 153,0 : REM clear data 960 ENDPROC  970 DEFPROC writemode() 971 REG 144, 16+32+64+128 : REM pins 4 to 7 write enable 972 REG 145, 1+2+4+8 : REM pins 0 to 3 write enable 973 REG 147,1 : REM data ready pin write enable 974 ENDPROC  980 DEFPROC readmode() 981 REG 144, 0 : REM pins 4 to 7 read  enable 982 REG 145, 0: REM pins 0 to 3 read enable 983 REG 147,2+4 : REM data ready pin read, CTS write, ack write enable 984 ENDPROC  990 DEFPROC sendcommand(cmd) 991 PROC sendbyte(cmd): ENDPROC 1000 DEFPROC sendhello()1005 PROC sendcommand(1)1006 ENDPROC 1090 DEFPROC readbyte()1091 PROC readmode()1092 REG 155,2 : REM nDST CTS nACK1093 PROC waitDSR()1094 LET a = (% REG 152) & @11110000 : LET b = (% REG 153) & @000011111095 REG 155,4 : REM send ACK1096 ENDPROC = a+b1100 DEFPROC readstring(size)1105 z$=""1110 PROC readmode()1120 FOR i = 1 TO size1130 REG 155,2 : REM CTS NACK1140 PROC waitDSR()1150 LET a = (% REG 152) & @11110000 : LET b = (% REG 153) & @00001111 : IF trace = 1 THEN PRINT "Data";a;"-";b;"+";a+b;">";  CHR$ (a+b):1155 LET z$ = z$ + CHR$ (a+b)1160 REG 155,4 : REM send ACK1170 NEXT i1180 ENDPROC =z$1200 DEFPROC waitDSR()1210 REPEAT : rdy =( % REG 155) & 1: REPEAT UNTIL rdy = 1 : REM wait for Data ready 1220 ENDPROC 1950 DEFPROC sendword(%v)1960 LET %l = %v & 255 : LET %h = %v>>81965 PRINT "word ";%v;" low ";%l;" hi ";%h1970 PROC sendbyte(%l): PROC sendbyte(%h) : ENDPROC 1990 DEFPROC sendbyte(%v)1991 PROC writemode()1992 REG 155,0 : REM nDSR nCTS nACK: print "Byte>";%v1993 REPEAT : cts = % REG 155 : REPEAT UNTIL cts = 2 : REM wait for CTS NDSR NACK1994 LET %a = %v & @11110000 : LET %b = %v & @000011111995 REG 152,%a: REG 153,%b1996 REG 155,1 : REM DSR1997 REPEAT : ack = % REG 155 : REPEAT UNTIL ack & 4<>0 : REM wait for ACK1998 REG 155,0 : REM NDSR1999 ENDPROC 2000 DEFPROC readhello()2005 PROC readmode()2008 LET result$=""2010 FOR i = 1 TO 52020 REG 155,2 : REM send CTS not ACK2025 REM PRINT "Wait DSR"2030 REPEAT : rdy =( % REG 155) & 1: REPEAT UNTIL rdy = 1 : REM wait for Data ready 2035 REM PRINT "Data Ready"2040 LET a = (% REG 152) & @11110000 : LET b = (% REG 153) & @00001111 : IF trace = 1 THEN PRINT "Data";a;"-";b;"+";a+b;">";  CHR$ (a+b)2045 LET result$ = result$ + CHR$ (a+b)2050 REG 155,4 : REM send ACK2060 NEXT i2070 ENDPROC 3000 DEFPROC hello()3010 PROC sendhello()3020 PROC readstring(5) TO result$: REM PROC readhello()3030 PRINT result$3040 ENDPROC 